
import logging
import os
import pandas as pd
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiohttp import web

API_TOKEN = '7606185382:AAEvBBq3oBgCw3cbbOxEWs74DK1IiCwfCKg'
WEBHOOK_HOST = 'https://krabamorebot.onrender.com'
WEBHOOK_PATH = '/webhook'
WEBHOOK_URL = f"{WEBHOOK_HOST}{WEBHOOK_PATH}"
WEBAPP_HOST = '0.0.0.0'
WEBAPP_PORT = int(os.environ.get('PORT', 5000))

bot = Bot(token=API_TOKEN, parse_mode='HTML')
dp = Dispatcher(bot)
logging.basicConfig(level=logging.INFO)

EXCEL_PATH = "catalog.xlsx"
def load_catalog():
    if os.path.exists(EXCEL_PATH):
        df = pd.read_excel(EXCEL_PATH)
        df = df[df['–¶–µ–Ω–∞'].notna() & df['–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –≥—Ä—É–ø–ø'].notna()]
        grouped = df.groupby('–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –≥—Ä—É–ø–ø', group_keys=False).apply(
            lambda g: g[['–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ', '–¶–µ–Ω–∞', '–ï–¥.–∏–∑–º.']].to_dict('records')).to_dict()
        return {k: '\n'.join([f"- {item['–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ']} ‚Äî {int(item['–¶–µ–Ω–∞'])}‚ÇΩ –∑–∞ {item['–ï–¥.–∏–∑–º.']}" for item in v]) for k, v in grouped.items()}
    return {}

category_data = load_catalog()

main_menu = ReplyKeyboardMarkup(resize_keyboard=True).add(
    KeyboardButton("üì¶ –ö–∞—Ç–∞–ª–æ–≥"), KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã"),
    KeyboardButton("üõí –ó–∞–∫–∞–∑–∞—Ç—å –≤ WhatsApp"), KeyboardButton("üéÅ –ê–∫—Ü–∏–∏"),
    KeyboardButton("üõç –ú–∞–≥–∞–∑–∏–Ω")
)

@dp.message_handler(commands=['start'])
async def start_cmd(message: types.Message):
    await message.answer("üëã <b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤ ü¶Ä –ö—Ä–∞–±–∞ –ú–æ—Ä–µ!</b>\n–ß–µ–º –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ —Å–µ–±—è –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è?", reply_markup=main_menu)

@dp.message_handler(lambda msg: msg.text.strip() == "üì¶ –ö–∞—Ç–∞–ª–æ–≥")
async def catalog_handler(msg: types.Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    [keyboard.add(cat) for cat in category_data.keys()]
    keyboard.add("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")
    await msg.answer("üóÇ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–æ–≤:", reply_markup=keyboard)

@dp.message_handler(lambda msg: msg.text.strip() in category_data)
async def category_items(msg: types.Message):
    await msg.answer(category_data[msg.text.strip()])

@dp.message_handler(lambda msg: msg.text.strip() == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
async def contacts_cmd(msg: types.Message):
    await msg.answer("üìç –ê–¥—Ä–µ—Å: –≥. –ë–ª–∞–≥–æ–≤–µ—â–µ–Ω—Å–∫, —É–ª. –ö–∞–ª–∏–Ω–∏–Ω–∞ 1\nüì± –¢–µ–ª–µ—Ñ–æ–Ω: +7 963 814 36 34\nüîó Telegram: @Krabamoreblg")

@dp.message_handler(lambda msg: msg.text.strip() == "üõí –ó–∞–∫–∞–∑–∞—Ç—å –≤ WhatsApp")
async def whatsapp_cmd(msg: types.Message):
    markup = InlineKeyboardMarkup().add(InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å WhatsApp", url="https://wa.me/message/J4K3D275FBZZF1"))
    await msg.answer("–î–ª—è –∑–∞–∫–∞–∑–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ WhatsApp üëá", reply_markup=markup)

async def handle_webhook(request):
    update = types.Update(**await request.json())
    await dp.process_update(update)
    return web.Response()

async def on_startup(app):
    await bot.set_webhook(WEBHOOK_URL)

async def on_shutdown(app):
    await bot.delete_webhook()

app = web.Application()
app.router.add_post(WEBHOOK_PATH, handle_webhook)
app.on_startup.append(on_startup)
app.on_shutdown.append(on_shutdown)

if __name__ == '__main__':
    web.run_app(app, host=WEBAPP_HOST, port=WEBAPP_PORT)
